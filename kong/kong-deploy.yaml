apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '6'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"ingress-kong"},"name":"ingress-kong","namespace":"kong"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"ingress-kong"}},"template":{"metadata":{"annotations":{"kuma.io/gateway":"enabled","prometheus.io/port":"8100","prometheus.io/scrape":"true","traffic.sidecar.istio.io/includeInboundPorts":""},"labels":{"app":"ingress-kong"}},"spec":{"containers":[{"env":[{"name":"KONG_PROXY_LISTEN","value":"0.0.0.0:8000,
      0.0.0.0:8443 ssl
      http2"},{"name":"KONG_ADMIN_LISTEN","value":"0.0.0.0:8001, 127.0.0.1:8444
      ssl"},{"name":"KONG_STATUS_LISTEN","value":"0.0.0.0:8100"},{"name":"KONG_DATABASE","value":"off"},{"name":"KONG_NGINX_WORKER_PROCESSES","value":"1"},{"name":"KONG_ADMIN_ACCESS_LOG","value":"/dev/stdout"},{"name":"KONG_ADMIN_ERROR_LOG","value":"/dev/stderr"},{"name":"KONG_PROXY_ERROR_LOG","value":"/dev/stderr"}],"image":"kong:2.0.4","imagePullPolicy":"IfNotPresent","lifecycle":{"preStop":{"exec":{"command":["/bin/sh","-c","kong
      quit"]}}},"livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/status","port":8100,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"proxy","ports":[{"containerPort":8000,"name":"proxy","protocol":"TCP"},{"containerPort":8443,"name":"proxy-ssl","protocol":"TCP"},{"containerPort":8100,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/status","port":8100,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"securityContext":{"runAsUser":1000}},{"env":[{"name":"CONTROLLER_KONG_ADMIN_URL","value":"https://127.0.0.1:8444"},{"name":"CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY","value":"true"},{"name":"CONTROLLER_PUBLISH_SERVICE","value":"kong/kong-proxy"},{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}}],"image":"kong-docker-kubernetes-ingress-controller.bintray.io/kong-ingress-controller:0.9.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":10254,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"ingress-controller","ports":[{"containerPort":8080,"name":"webhook","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":10254,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1}}],"serviceAccountName":"kong-serviceaccount"}}}}
  creationTimestamp: '2020-10-14T08:10:10Z'
  generation: 6
  labels:
    app: ingress-kong
  name: ingress-kong
  namespace: kong
  resourceVersion: '555696538'
  selfLink: /apis/apps/v1/namespaces/kong/deployments/ingress-kong
  uid: 628aabd4-dc17-428d-9862-eccfefe29934
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ingress-kong
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kuma.io/gateway: enabled
        prometheus.io/port: '8100'
        prometheus.io/scrape: 'true'
        traffic.sidecar.istio.io/includeInboundPorts: ''
      labels:
        app: ingress-kong
    spec:
      containers:
        - env:
            - name: KONG_PROXY_LISTEN
              value: '0.0.0.0:8000, 0.0.0.0:8443 ssl http2'
            - name: KONG_ADMIN_LISTEN
              value: '0.0.0.0:8001, 127.0.0.1:8444 ssl'
            - name: KONG_STATUS_LISTEN
              value: '0.0.0.0:8100'
            - name: KONG_DATABASE
              value: 'off'
            - name: KONG_NGINX_WORKER_PROCESSES
              value: '1'
            - name: KONG_ADMIN_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_ADMIN_ERROR_LOG
              value: /dev/stderr
            - name: KONG_PROXY_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_PROXY_ERROR_LOG
              value: /dev/stderr
            - name: KONG_TRUSTED_IPS
              value: '0.0.0.0/0,::/0'
            - name: KONG_REAL_IP_HEADER
              value: X-Forwarded-For
            - name: KONG_NGINX_PROXY_PROXY_BUFFER_SIZE
              value: 128k
            - name: KONG_NGINX_PROXY_PROXY_BUFFERS
              value: 8 256k
            - name: KONG_CLIENT_BODY_BUFFER_SIZE
              value: 1024k
          image: 'kong:2.0.4'
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - '-c'
                  - kong quit
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /status
              port: 8100
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: proxy
          ports:
            - containerPort: 8000
              name: proxy
              protocol: TCP
            - containerPort: 8443
              name: proxy-ssl
              protocol: TCP
            - containerPort: 8100
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /status
              port: 8100
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
            - name: CONTROLLER_KONG_ADMIN_URL
              value: 'https://127.0.0.1:8444'
            - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
              value: 'true'
            - name: CONTROLLER_PUBLISH_SERVICE
              value: kong/kong-proxy
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: >-
            kong-docker-kubernetes-ingress-controller.bintray.io/kong-ingress-controller:0.9.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ingress-controller
          ports:
            - containerPort: 8080
              name: webhook
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kong-serviceaccount
      serviceAccountName: kong-serviceaccount
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: '2020-10-14T08:11:31Z'
      lastUpdateTime: '2020-10-14T08:11:31Z'
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: 'True'
      type: Available
    - lastTransitionTime: '2020-10-14T08:10:10Z'
      lastUpdateTime: '2020-11-11T08:00:41Z'
      message: ReplicaSet "ingress-kong-7cc58fdd6b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: 'True'
      type: Progressing
  observedGeneration: 6
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
